// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  asesor
  peserta
}

model User {
  id          String       @id @default(uuid())
  username    String
  email       String       @unique
  password    String
  role        Role
  pendaftaran Pendaftaran?
  profile     ProfileUser?
  JadwalUjian JadwalUjian?
}

model ProfileUser {
  id            String    @id @default(uuid())
  NIK           String?   @unique
  no_registrasi String?   @unique
  user_id       String    @unique
  user          User      @relation(fields: [user_id], references: [id])
  nama_lengkap  String
  asal_sekolah  String?
  kompetensi    String?
  PNS           String?
  masa_berlaku  DateTime?
  kebangsaan    String?
  tempat_lahir  String?
  tanggal_lahir DateTime?
  jenis_kelamin String?
  alamat        String?
  kode_pos      String?
  no_telp       String?
}

enum StatusDaftar {
  pending
  diterima
  ditolak
}

model Pendaftaran {
  id                     String                @id @default(uuid())
  status_daftar          StatusDaftar
  tanggal_daftar         DateTime              @default(now())
  catatan                String?
  kualifikasi_pendidikan String?
  tujuan_sertifikasi     String?
  ttd_peserta            String?
  ttd_asesor             String?
  user_id                String                @unique
  user                   User                  @relation(fields: [user_id], references: [id])
  skema_id               String
  skema                  Skema                 @relation(fields: [skema_id], references: [id])
  sertifikat             Sertifikat?
  lampiran_apl1          LampiranAPL1[]
  lampiran_apl2          LampiranAPL2[]
  JadwalUjianPendaftar   JadwalUjianPendaftar?
}

enum StatusVerifikasi {
  memenuhi
  pending
  tidak_memenuhi
}

model LampiranAPL1 {
  id                String            @id @default(uuid())
  nama_dokumen      String?
  path_file         String?
  status_verifikasi StatusVerifikasi?
  catatan           String?
  pendaftaran_id    String
  pendaftaran       Pendaftaran       @relation(fields: [pendaftaran_id], references: [id])
}

enum StatusPraAsesmen {
  kompeten
  belum_kompeten
}

model LampiranAPL2 {
  id                 String            @id @default(uuid())
  path_file          String?
  status_pra_asesmen StatusPraAsesmen
  catatan            String?
  status_verifikasi  StatusVerifikasi?
  elemen_kuk_id      String
  elemen_kuk         ElemenKUK         @relation(fields: [elemen_kuk_id], references: [id])
  pendaftaran_id     String
  pendaftaran        Pendaftaran       @relation(fields: [pendaftaran_id], references: [id])
}

enum JenisSkema {
  knni
  okupasi
  klaster
}

model Skema {
  id          String        @id @default(uuid())
  judul_skema String
  nomor_skema String        @unique
  jenis       JenisSkema
  pendaftaran Pendaftaran[]
  unit        Unit[]
  tuk         TUK[]
}

enum JenisStandar {
  standar_khusus
  standar_internasional
  skkni
}

model Unit {
  id            String       @id @default(uuid())
  judul_unit    String
  kode_unit     String       @unique
  jenis_standar JenisStandar
  skema_id      String
  skema         Skema        @relation(fields: [skema_id], references: [id])
  elemen_kuk    ElemenKUK[]
}

model ElemenKUK {
  id           String         @id @default(uuid())
  judul_elemen String
  kuk          String
  unit_id      String
  unit         Unit           @relation(fields: [unit_id], references: [id])
  LampiranAPL2 LampiranAPL2[]
}

enum JenisTUK {
  sewaktu
  tetap
  mandiri
}

model TUK {
  id          String        @id @default(uuid())
  nama_tuk    String
  kode_tuk    String        @unique
  alamat      String
  jenis       JenisTUK
  JadwalUjian JadwalUjian[]
  skema_id    String
  skema       Skema         @relation(fields: [skema_id], references: [id])
}

enum Kehadiran {
  hadir
  tidak_hadir
}

enum StatusHasilUjian {
  lulus
  pending
  tidak_lulus
}

model JadwalUjianPendaftar {
  id                 String           @id @default(uuid())
  pendaftaran_id     String           @unique
  jadwal_id          String
  kehadiran          Kehadiran?
  nilai              String?
  diskualifikasi     Boolean          @default(false)
  status_hasil_ujian StatusHasilUjian @default(pending)
  catatan            String?
  pendaftaran        Pendaftaran      @relation(fields: [pendaftaran_id], references: [id])
  jadwal_ujian       JadwalUjian      @relation(fields: [jadwal_id], references: [id])
}

model JadwalUjian {
  id                   String                 @id @default(uuid())
  tuk_id               String
  asesor_id            String                 @unique
  keterangan           String?
  kapasitas            Int?                   @default(24)
  waktu_mulai          DateTime               @default(now())
  waktu_selesai        DateTime
  durasi               Int
  tuk                  TUK                    @relation(fields: [tuk_id], references: [id])
  asesor               User                   @relation(fields: [asesor_id], references: [id])
  JadwalUjianPendaftar JadwalUjianPendaftar[]
}

model Sertifikat {
  id               String      @id @default(uuid())
  pendaftaran_id   String      @unique
  nomor_sertifikat String      @unique
  tanggal_terbit   DateTime
  path_file        String?
  pendaftaran      Pendaftaran @relation(fields: [pendaftaran_id], references: [id])
}

model MUK {
  id        String @id @default(uuid())
  nama_muk  String
  deskripsi String
  path_file String
}

enum JenisLSP {
  LSP_P1
  LSP_P2
  LSP_P3
}

model ProfileLSP {
  id            String   @id @default(uuid())
  no_sk_lisensi String
  no_lisensi    String
  jenis         JenisLSP
  alamat        String?
  website_link  String?
  no_fax        String?
  no_hp         String?
  email         String?
}

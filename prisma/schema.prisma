// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  asesor
  peserta
}

model User {
  id            String        @id @default(uuid())
  nama_lengkap  String
  email         String        @unique
  password      String
  asal_sekolah  String?
  kompetensi    String?
  masa_berlaku  DateTime?
  role          Role
  no_registrasi String?       @unique
  no_telp       String?
  alamat        String?
  pendaftaran   Pendaftaran[]
}

enum JenisLSP {
  LSP_P1
  LSP_P2
  LSP_P3
}

model ProfileLSP {
  id            String   @id @default(uuid())
  no_sk_lisensi String
  no_lisensi    String
  jenis         JenisLSP
  alamat        String?
  website_link  String?
  no_fax        String?
  no_hp         String?
  email         String?
}

enum StatusDaftar {
  pending
  diterima
  ditolak
}

model Pendaftaran {
  id                     String         @id @default(uuid())
  no_registrasi          String         @unique
  status_daftar          StatusDaftar
  tanggal_daftar         DateTime
  NIK                    String?        @unique
  paspor                 String?        @unique
  tempat_lahir           String?
  tanggal_lahir          DateTime?
  jenis_kelamin          String?
  kebangsaan             String?
  catatan                String?
  kualifikasi_pendidikan String?
  tujuan_sertifikasi     String?
  skema_id               String
  skema                  Skema          @relation(fields: [skema_id], references: [id])
  user_id                String
  user                   User           @relation(fields: [user_id], references: [id])
  lampiran_apl1          LampiranAPL1[]
  lampiran_apl2          LampiranAPL2[]
  sertifikat             Sertifikat?
  jadwal_ujian_id        String
  jadwal_ujian           JadwalUjian    @relation(fields: [jadwal_ujian_id], references: [id])
}

enum StatusVerifikasi {
  memenuhi
  tidak_memenuhi
  tidak_ada
}

model LampiranAPL1 {
  id                String           @id @default(uuid())
  nama_dokumen      String
  path_file         String
  status_verifikasi StatusVerifikasi
  catatan           String?
  pendaftaran_id    String
  pendaftaran       Pendaftaran      @relation(fields: [pendaftaran_id], references: [id])
}

enum StatusPreAsesmen {
  kompeten
  belum_kompeten
}

model LampiranAPL2 {
  id                 String           @id @default(uuid())
  kode_unit          String
  nama_unit          String
  bukti_pendukung    String?
  status_pre_asesmen StatusPreAsesmen
  pendaftaran_id     String
  pendaftaran        Pendaftaran      @relation(fields: [pendaftaran_id], references: [id])
}

model Skema {
  id          String        @id @default(uuid())
  nomor_skema String        @unique
  nama        String
  jenis       String
  okupasi     String?
  klaster     String?
  pendaftaran Pendaftaran[]
  unit        Unit[]
  JadwalUjian JadwalUjian[]
}

model Unit {
  id         String      @id @default(uuid())
  skema_id   String
  judul_unit String
  kode_unit  String      @unique
  skema      Skema       @relation(fields: [skema_id], references: [id])
  elemen_kuk ElemenKUK[]
}

model ElemenKUK {
  id           String @id @default(uuid())
  unit_id      String
  judul_elemen String
  unit         Unit   @relation(fields: [unit_id], references: [id])
}

enum JenisTUK {
  sewaktu
  tetap
  mandiri
}

model TUK {
  id          String        @id @default(uuid())
  nama_tuk    String
  kode_tuk    String        @unique
  alamat      String
  jenis       JenisTUK
  JadwalUjian JadwalUjian[]
}

model JadwalUjian {
  id            String        @id @default(uuid())
  skema_id      String
  tuk_id        String
  tanggal_ujian DateTime
  keterangan    String?
  // status        String // belum_dimulai, berlangsung, selesai
  kapasitas     Int           @default(24)
  waktu_mulai   DateTime      @default(now())
  waktu_selesai DateTime
  skema         Skema         @relation(fields: [skema_id], references: [id])
  tuk           TUK           @relation(fields: [tuk_id], references: [id])
  peserta       Pendaftaran[]
}

// enum StatusKompeten {
//   kompeten
//   belum_kompeten
// }

// model PenjadwalanPeserta {
//   id              String         @id @default(uuid())
//   pendaftaran_id  String
//   jadwal_id       String
//   status_kompeten StatusKompeten
//   catatan         String?
//   pendaftaran     Pendaftaran    @relation(fields: [pendaftaran_id], references: [id])
//   jadwal          JadwalUjian    @relation(fields: [jadwal_id], references: [id])
// }

model Sertifikat {
  id             String      @id @default(uuid())
  pendaftaran_id String      @unique
  nomor_sert     String      @unique
  tanggal_terbit DateTime
  path_file      String?
  pendaftaran    Pendaftaran @relation(fields: [pendaftaran_id], references: [id])
}
